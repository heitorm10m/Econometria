# dplyr::count(df, emp, sort = TRUE)
dffem <- df[!(df$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
h <- heckit(outcome = formula, selection = pro, dffem)
summary(h)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev + renda_res_dom
formula = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
dffem <- df[!(df$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
h <- heckit(outcome = formula, selection = pro, dffem)
summary(h)
dffem <- df[!(df$feminino < 1),]
rm(list=ls())
## importando os pacotes necessários
library(tidyverse)
library(survival)
library(haven)
library(AER)
library(plm)
library(stargazer)
library(sampleSelection)
library(glm2)
# rm(list=ls())
## lendo o df
mroz <- read_dta("/Users/vinicius/Google Drive/UnB/Econometria/datasets/MROZ.dta")
df <- read_dta("/Users/vinicius/Downloads/PNAD/pnad_co_filtrada3.dta")
## removendo os novos e os velhinhos
df <- df[!(df$idade < 18 | df$idade >= 65),]
## vendo a estrutura do painel
#str(df)
## substituindo os valores de grau_educ, ppi, lsalh e nf05
names(df)[names(df) == 'fund_incompleto'] <- 'fund_inc'
names(df)[names(df) == 'fund_completo'] <- 'fund_comp'
names(df)[names(df) == 'medio_incompleto'] <- 'med_inc'
names(df)[names(df) == 'medio_completo'] <- 'med_comp'
names(df)[names(df) == 'superior_incompleto'] <- 'sup_inc'
names(df)[names(df) == 'superior_completo'] <- 'sup_comp'
names(df)[names(df) == 'preta_parda_ind'] <- 'ppi'
names(df)[names(df) == 'lsalariohora'] <- 'lsalh'
names(df)[names(df) == 'num_filhos_05'] <- 'nf05'
## criando idadesq e nf06m e renda_res_dom
df$idadesq <- df$idade^2
df$nf06m <- df$num_filhos_06_10 + df$num_filhos_11_18 + df$num_filhos_18m
df$renda_res_dom <- df$renda_hab_domiciliar - df$renda_hab_prin
## criando variavel de emp
df$emp <- with(df, ifelse(fora_ft == 1 | desocupado == 1, 0, 1))
summary(df$emp)
## testando pra ver se tá tudo ok
formula = lsalh ~ 1 +educ + idade + idadesq + feminino + ppi
panel <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(panel)
## rodando o modelo de mqo completo
formula = lsalh ~ 1 + educ + educ:ppi + educ:feminino + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + feminino + feminino:ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
mqo_na <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(mqo_na)
df1 <- df
## substituindo valores nulos por 0
df1$renda_hab_hora[is.na(df1$renda_hab_hora)] <- 0
df1$lsalh <- log(df1$renda_hab_hora)
## substituindo valores nulos e infiinitos
df1$lsalh[is.na(df1$lsalh)] <- 0
df1$lsalh[which(!is.finite(df1$lsalh))] <- 0
df1$cont_prev[is.na(df1$cont_prev)] <- 0
## rodando mqo com todo mundo
mqo_0 <- plm(formula, data = df1, model = "pooling", index = c("idind",'data'))
summary(mqo_0)
## rodando um tobit
tobit <- AER::tobit(formula, data = df1, left = 0)
summary(tobit)
## rodando um tobit
tobit1 <- AER::tobit(hours ~ 1+nwifeinc + educ + exper + expersq + age + kidslt6 +kidsge6, data = mroz, left = 0)
summary(tobit1)
## formatando bonitinho
# stargazer(mqo_na, mqo_0, title="MQOA vs Tobit", align=TRUE)
## HECKIT
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df[!(df$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
h <- heckit(pro, formula, dffem)
summary(h)
dplyr::count(dffem, renda_res_dom, sort = TRUE)
dffem <- df1[!(df1$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
h <- heckit(pro, formula, dffem)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df1[!(df1$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
h <- heckit(pro, formula, dffem)
## HECKIT
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev + renda_res_dom
h <- heckit(pro, formula, df)
df$renda_res_dom[is.na(df$renda_res_dom)] <- 0
df$cont_prev[is.na(df$cont_prev)] <- 0
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev + renda_res_dom
h <- heckit(pro, formula, df)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi
h <- heckit(pro, formula, df)
View(h)
summary(h)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df1[!(df1$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, formula, dffem)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi
hfem <- heckit(pro, formula, dffem)
pro = emp ~ 1 + educ + rural:ppi
form = lsalh ~ 1 + educ
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df1[!(df1$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, formula, dffem)
pro = emp ~ 1 + educ + rural:ppi
form = lsalh ~ 1 + educ
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df1[!(df1$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, form, dffem)
summary(h)
summary(hfem)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df1[!(df1$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, form, dffem)
summary(hfem)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df1[!(df1$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, form, dffem)
summary(hfem)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df1[!(df1$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, form, dffem)
summary(hfem)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df[!(df$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, form, dffem)
summary(hfem)
mqo_fem <- plm(form, data = dffem, model = "pooling", index = c("idind",'data'))
summary(mqo_fem)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df[!(df$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, form, dffem)
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df[!(df$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, form, dffem)
summary(hfem)
# há uma seleção amostral bastante forte (rho tem um p-valor de 0,003 e uma estimativa de -0,016)
# estimando o modelo por MQO
mqo_fem <- plm(form, data = dffem, model = "pooling", index = c("idind",'data'))
summary(mqo_fem)
View(tobit)
df$idadesq <- df$idade^2
df$nf06m <- df$num_filhos_06_10 + df$num_filhos_11_18 + df$num_filhos_18m
df$renda_res_dom <- df$renda_hab_domiciliar - df$renda_hab_prin
## criando variavel de emp
df$emp <- with(df, ifelse(fora_ft == 1 | desocupado == 1, 0, 1))
summary(df$emp)
## testando pra ver se tá tudo ok
formula = lsalh ~ 1 +educ + idade + idadesq + feminino + ppi
panel <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(panel)
## rodando o modelo de mqo completo
formula = lsalh ~ 1 + educ + educ:ppi + educ:feminino + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + feminino + feminino:ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
mqo_na <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(mqo_na)
## importando os pacotes necessários
library(tidyverse)
library(survival)
library(haven)
library(AER)
library(plm)
library(stargazer)
library(sampleSelection)
library(glm2)
# rm(list=ls())
## lendo o df mroz <- read_dta("/Users/vinicius/Google Drive/UnB/Econometria/datasets/MROZ.dta")
df <- read_dta("/Users/vinicius/Downloads/PNAD/pnad_co_filtrada3.dta")
## removendo os novos e os velhinhos
df <- df[!(df$idade < 18 | df$idade >= 65),]
## vendo a estrutura do painel
#str(df)
## substituindo os valores de grau_educ, ppi, lsalh e nf05
names(df)[names(df) == 'fund_incompleto'] <- 'fund_inc'
names(df)[names(df) == 'fund_completo'] <- 'fund_comp'
names(df)[names(df) == 'medio_incompleto'] <- 'med_inc'
names(df)[names(df) == 'medio_completo'] <- 'med_comp'
names(df)[names(df) == 'superior_incompleto'] <- 'sup_inc'
names(df)[names(df) == 'superior_completo'] <- 'sup_comp'
names(df)[names(df) == 'preta_parda_ind'] <- 'ppi'
names(df)[names(df) == 'lsalariohora'] <- 'lsalh'
names(df)[names(df) == 'num_filhos_05'] <- 'nf05'
## criando idadesq e nf06m e renda_res_dom
df$idadesq <- df$idade^2
df$nf06m <- df$num_filhos_06_10 + df$num_filhos_11_18 + df$num_filhos_18m
df$renda_res_dom <- df$renda_hab_domiciliar - df$renda_hab_prin
## criando variavel de emp
df$emp <- with(df, ifelse(fora_ft == 1 | desocupado == 1, 0, 1))
summary(df$emp)
## testando pra ver se tá tudo ok
formula = lsalh ~ 1 +educ + idade + idadesq + feminino + ppi
panel <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(panel)
## rodando o modelo de mqo completo
formula = lsalh ~ 1 + educ + educ:ppi + educ:feminino + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + feminino + feminino:ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
mqo_na <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(mqo_na)
rm(list=ls())
## importando os pacotes necessários
library(tidyverse)
library(survival)
library(haven)
library(AER)
library(plm)
library(stargazer)
library(sampleSelection)
library(glm2)
# rm(list=ls())
## lendo o df mroz <- read_dta("/Users/vinicius/Google Drive/UnB/Econometria/datasets/MROZ.dta")
df <- read_dta("/Users/vinicius/Downloads/PNAD/pnad_co_filtrada3.dta")
## removendo os novos e os velhinhos
df <- df[!(df$idade < 18 | df$idade >= 65),]
## vendo a estrutura do painel
#str(df)
## substituindo os valores de grau_educ, ppi, lsalh e nf05
names(df)[names(df) == 'fund_incompleto'] <- 'fund_inc'
names(df)[names(df) == 'fund_completo'] <- 'fund_comp'
names(df)[names(df) == 'medio_incompleto'] <- 'med_inc'
names(df)[names(df) == 'medio_completo'] <- 'med_comp'
names(df)[names(df) == 'superior_incompleto'] <- 'sup_inc'
names(df)[names(df) == 'superior_completo'] <- 'sup_comp'
names(df)[names(df) == 'preta_parda_ind'] <- 'ppi'
names(df)[names(df) == 'lsalariohora'] <- 'lsalh'
names(df)[names(df) == 'num_filhos_05'] <- 'nf05'
## criando idadesq e nf06m e renda_res_dom
df$idadesq <- df$idade^2
df$nf06m <- df$num_filhos_06_10 + df$num_filhos_11_18 + df$num_filhos_18m
df$renda_res_dom <- df$renda_hab_domiciliar - df$renda_hab_prin
## criando variavel de emp
df$emp <- with(df, ifelse(fora_ft == 1 | desocupado == 1, 0, 1))
summary(df$emp)
## testando pra ver se tá tudo ok
formula = lsalh ~ 1 +educ + idade + idadesq + feminino + ppi
panel <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(panel)
## rodando o modelo de mqo completo
formula = lsalh ~ 1 + educ + educ:ppi + educ:feminino + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + feminino + feminino:ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
mqo_na <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(mqo_na)
View(mqo_na)
df1 <- df
## substituindo valores nulos por 0
df1$renda_hab_hora[is.na(df1$renda_hab_hora)] <- 0
df1$lsalh <- log(df1$renda_hab_hora)
## substituindo valores nulos e infiinitos
df1$lsalh[is.na(df1$lsalh)] <- 0
df1$lsalh[which(!is.finite(df1$lsalh))] <- 0
df1$cont_prev[is.na(df1$cont_prev)] <- 0
## rodando mqo com todo mundo
mqo_0 <- plm(formula, data = df1, model = "pooling", index = c("idind",'data'))
summary(mqo_0)
## rodando um tobit
tobit <- AER::tobit(formula, data = df1, left = 0)
summary(tobit)
## rodando um probit para emp
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + renda_res_dom
probit <- glm(pro, family = binomial(link = "probit"), data = df1)
probit_form = emp ~ 1 + educ + educ:ppi + educ:feminino + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + feminino + feminino:ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + renda_res_dom
probit <- glm(probit_form, family = binomial(link = "probit"), data = df1)
View(probit)
View(tobit)
fmobit <- AER::tobit(formula, data = df1, left = 0)
summary(fmtobit)
fmtobit <- AER::tobit(formula, data = df1, left = 0)
summary(fmtobit)
fmtobit$scale
pnorm(x%*%fmtobit$coef[-1]/fmtobit$scale)%*%fmtobit$coef[-1]
pnorm(sum(apply(fmtobit$x,2,FUN=mean) * fmtobit$coef)/fmtobit$scale) *
fmtobit$coef[-1]
fmtobit <- AER::tobit(formula, data = df1, left = 0, x = True)
summary(fmtobit)
## vendo o APE
fmtobit$scale
pnorm(sum(apply(fmtobit$x,2,FUN=mean) * fmtobit$coef)/fmtobit$scale) *
fmtobit$coef[-1]
fmtobit <- AER::tobit(formula, data = df1, left = 0, x = TRUE)
summary(fmtobit)
View(tobit)
View(fmtobit)
pnorm(fmtobit$x%*%reg$coef[-1]/reg$scale)%*%reg$coef[-1].
pnorm(fmtobit$x%*%fmtobit$coef[-1]/fmtobit$scale)%*%fmtobit$coef[-1]
pnorm(x%*%fmtobit$coef[-1]/fmtobit$scale)%*%fmtobit$coef[-1]
fmtobit$x
fmtobit$x%*%fmtobit$coef[-1]
fmtobit$x%*%fmtobit$coef
pnorm(x%*%fmtobit$coef/fmtobit$scale)%*%fmtobit$coef
formula = lsalh ~ educ + educ:ppi + educ:feminino + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + feminino + feminino:ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
mqo_na <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(mqo_na)
## rodando um tobit
fmtobit <- AER::tobit(formula, data = df1, left = 0, x = TRUE)
summary(fmtobit)
## vendo o APE
fmtobit$scale
pnorm(sum(apply(fmtobit$x,2,FUN=mean) * fmtobit$coef)/fmtobit$scale) *
fmtobit$coef[-1]
pnorm(fmtobit$x%*%fmtobit$coef[-1]/fmtobit$scale)%*%fmtobit$coef[-1]
View(fmtobit)
pnorm(sum(apply(fmtobit$x,2,FUN=mean) * fmtobit$coef)/fmtobit$scale) *
fmtobit$coef
pnorm(fmtobit$x%*%fmtobit$coef/fmtobit$scale)%*%fmtobit$coef
pnorm(sum(apply(fmtobit$x,2,FUN=mean) * fmtobit$coef)/fmtobit$scale) * fmtobit$coef
pnorm(fmtobit$x%*%fmtobit$coef/fmtobit$scale)%*%fmtobit$coef
pnorm(sum(apply(fmtobit$x,2,FUN=mean) * fmtobit$coef)/fmtobit$scale) * fmtobit$coef
summary(fmtobit)
pnorm(sum(apply(fmtobit$x,2,FUN=mean) * fmtobit$coef)/fmtobit$scale) * fmtobit$coef
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df[!(df$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, form, dffem)
summary(hfem)
mqo_fem <- plm(form, data = dffem, model = "pooling", index = c("idind",'data'))
summary(mqo_fem)
stargazer(mqo_fem, hfem, title="MQOA vs Heckit", align=TRUE)
summary(hfem)
## importando os pacotes necessários
library(tidyverse)
library(survival)
library(haven)
library(AER)
library(plm)
library(stargazer)
library(sampleSelection)
library(glm2)
# rm(list=ls())
## lendo o df mroz <- read_dta("/Users/vinicius/Google Drive/UnB/Econometria/datasets/MROZ.dta")
df <- read_dta("/Users/vinicius/Downloads/PNAD/pnad_co_filtrada3.dta")
## removendo os novos e os velhinhos
df <- df[!(df$idade < 18 | df$idade >= 65),]
## vendo a estrutura do painel
#str(df)
## substituindo os valores de grau_educ, ppi, lsalh e nf05
names(df)[names(df) == 'fund_incompleto'] <- 'fund_inc'
names(df)[names(df) == 'fund_completo'] <- 'fund_comp'
names(df)[names(df) == 'medio_incompleto'] <- 'med_inc'
names(df)[names(df) == 'medio_completo'] <- 'med_comp'
names(df)[names(df) == 'superior_incompleto'] <- 'sup_inc'
names(df)[names(df) == 'superior_completo'] <- 'sup_comp'
names(df)[names(df) == 'preta_parda_ind'] <- 'ppi'
names(df)[names(df) == 'lsalariohora'] <- 'lsalh'
names(df)[names(df) == 'num_filhos_05'] <- 'nf05'
## criando idadesq e nf06m e renda_res_dom
df$idadesq <- df$idade^2
df$nf06m <- df$num_filhos_06_10 + df$num_filhos_11_18 + df$num_filhos_18m
df$renda_res_dom <- df$renda_hab_domiciliar - df$renda_hab_prin
## criando variavel de emp
df$emp <- with(df, ifelse(fora_ft == 1 | desocupado == 1, 0, 1))
summary(df$emp)
## testando pra ver se tá tudo ok
formula = lsalh ~ 1 +educ + idade + idadesq + feminino + ppi
panel <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(panel)
## rodando o modelo de mqo completo
formula = lsalh ~ educ + educ:ppi + educ:feminino + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + feminino + feminino:ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
mqo_na <- plm(formula, data = df, model = "pooling", index = c("idind",'data'))
summary(mqo_na)
df1 <- df
## substituindo valores nulos por 0
df1$renda_hab_hora[is.na(df1$renda_hab_hora)] <- 0
df1$lsalh <- log(df1$renda_hab_hora)
## substituindo valores nulos e infiinitos
df1$lsalh[is.na(df1$lsalh)] <- 0
df1$lsalh[which(!is.finite(df1$lsalh))] <- 0
df1$cont_prev[is.na(df1$cont_prev)] <- 0
## rodando mqo com todo mundo
mqo_0 <- plm(formula, data = df1, model = "pooling", index = c("idind",'data'))
summary(mqo_0)
## rodando um tobit
fmtobit <- AER::tobit(formula, data = df1, left = 0, x = TRUE)
summary(fmtobit)
## vendo o APE
fmtobit$scale
pnorm(sum(apply(fmtobit$x,2,FUN=mean) * fmtobit$coef)/fmtobit$scale) * fmtobit$coef
## HECKIT
pro = emp ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + renda_res_dom
form = lsalh ~ 1 + educ + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + ppi + chefe_dom + casado + nf05 + nf05:ppi + DF + DF:ppi + rural + rural:ppi + cont_prev
## contando os valores que aparecem em emp
# dplyr::count(df, emp, sort = TRUE)
## criando uma base só com mulheres
dffem <- df[!(df$feminino < 1),]
dffem$renda_res_dom[is.na(dffem$renda_res_dom)] <- 0
dffem$cont_prev[is.na(dffem$cont_prev)] <- 0
hfem <- heckit(pro, form, dffem)
summary(hfem)
# há uma seleção amostral (rho tem um p-valor de 0,003 e uma estimativa de -0,016), mas que não parece afetar os coeficientes
# como o coeficiente negativo se aplica a obs foras da amostra, parece haver viés positivo?
# estimando o modelo por MQO
mqo_fem <- plm(form, data = dffem, model = "pooling", index = c("idind",'data'))
summary(mqo_fem)
## tabela no latex
stargazer(mqo_fem, hfem, title="MQOA vs Heckit", align=TRUE)
View(tobit)
df <- read_dta("/Users/vinicius/Downloads/PNAD/pnad_co_filtrada3.dta")
## removendo os novos e os velhinhos
df <- df[!(df$idade < 18 | df$idade >= 65),]
## vendo a estrutura do painel
#str(df)
## substituindo os valores de grau_educ, ppi, lsalh e nf05
names(df)[names(df) == 'fund_incompleto'] <- 'fund_inc'
names(df)[names(df) == 'fund_completo'] <- 'fund_comp'
names(df)[names(df) == 'medio_incompleto'] <- 'med_inc'
names(df)[names(df) == 'medio_completo'] <- 'med_comp'
names(df)[names(df) == 'superior_incompleto'] <- 'sup_inc'
names(df)[names(df) == 'superior_completo'] <- 'sup_comp'
names(df)[names(df) == 'preta_parda_ind'] <- 'ppi'
names(df)[names(df) == 'lsalariohora'] <- 'lsalh'
names(df)[names(df) == 'num_filhos_05'] <- 'nf05'
## criando idadesq e nf06m e renda_res_dom
df$idadesq <- df$idade^2
df$nf06m <- df$num_filhos_06_10 + df$num_filhos_11_18 + df$num_filhos_18m
df$renda_res_dom <- df$renda_hab_domiciliar - df$renda_hab_prin
df$renda_res_dom1000 <- df$renda_res_dom/1000
## criando variavel de emp
df$emp <- with(df, ifelse(fora_ft == 1 | desocupado == 1, 0, 1))
df1 <- df
## substituindo valores nulos por 0
df1$renda_hab_hora[is.na(df1$renda_hab_hora)] <- 0
df1$lsalh <- log(df1$renda_hab_hora)
## substituindo valores nulos e infiinitos
df1$lsalh[is.na(df1$lsalh)] <- 0
df1$lsalh[which(!is.finite(df1$lsalh))] <- 0
df1$cont_prev[is.na(df1$cont_prev)] <- 0
probit <- glm(formula = form_probit, family = binomial("probit") ,data = df1)
form_probit = emp ~ renda_res_dom1000 + educ +educ:feminino + educ:ppi + fund_inc + fund_inc:ppi + fund_comp + fund_comp:ppi + med_inc + med_inc:ppi + med_comp + med_comp:ppi + sup_inc + sup_inc:ppi + sup_comp + sup_comp:ppi + idade + idadesq + nf05 + nf06m + feminino + ppi + feminino:ppi + casado + chefe_dom + DF + DF:ppi + rural + rural:ppi
probit <- glm(formula = form_probit, family = binomial("probit") ,data = df1)
View(probit)
form_probit = emp ~ 1 + renda_res_dom1000 + educ + educ:feminino + educ:ppi + idade + idadesq + nf05 + nf06m + feminino + ppi + feminino:ppi + casado + chefe_dom + DF + DF:ppi + rural + rural:ppi
probit <- glm(formula = form_probit, family = binomial("probit") ,data = df1)
form_probit = emp ~ 1 + renda_res_dom1000 + educ + educ:feminino + educ:ppi + idade + idadesq + nf05 + nf06m + feminino + ppi + feminino:ppi + casado + chefe_dom + DF + DF:ppi + rural + rural:ppi
probit <- glm(formula = form_probit, family = binomial("logit"), data = df1)
form_probit = emp ~ 1 + renda_res_dom1000 + educ + educ:feminino + educ:ppi + idade + idadesq + nf05 + nf06m + feminino + ppi + feminino:ppi + casado + chefe_dom + DF + DF:ppi + rural + rural:ppi
probit <- glm(formula = form_probit, family = binomial("logit"), data = df)
